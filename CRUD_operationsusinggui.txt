/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crudoperations;
/**
 *
 * @author Saad
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.util.Scanner;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
public class CrudOperations extends JFrame {     
    /**
     * @param args the command line arguments
     */
    private JLabel lbl1;
    private JLabel lbl2;
    private JTextField tft1;
    private JTextField tft2;
    public JButton jb1;
    public JButton jb2;
    public JButton jb3;
    public JButton jb4;
    private FlowLayout layout;
    CrudOperations(){
    
        layout = new FlowLayout();
        setLayout(layout);
        
        //adding label 1
        lbl1 = new JLabel("Name");
        add(lbl1);
        
        //adding textfield 1
        
        tft1 = new JTextField();
        tft1.setColumns(5);
        add(tft1);
        
        
        //adding label 2
        
        lbl2 = new JLabel("Address");
        add(lbl2);
        
        
        //  adding textfield 2
        
        tft2 = new JTextField();
        tft2.setColumns(5);
        add(tft2);
        
        
        //adding button 1
        
        jb1 = new JButton("Insert");
        add(jb1);
        
       
        //adding button 2
        
        jb2 = new JButton("delete");
        add(jb2);
        
        //adding button 3
        jb3 = new JButton("update");
        add(jb3);
        
        
        //adding button 4
        jb4 = new JButton("Select");
        add(jb4);
        
    setVisible(true);
    setSize(300,250);
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
    
    public static void main(String[] args) throws IOException, SQLException{
        // TODO code application logic here
        final CrudOperations cr = new CrudOperations();
        
        //creating connection
        
       String url="jdbc:mysql://localhost:3306/stddb";
        String username = "root";
        String pwd = "";
        
        final Connection con = DriverManager.getConnection(url,username,pwd);
       // inserting data into database by clicking jb1 (insert)
        
        
        //inserting values
        cr.jb1.addActionListener(
        
        new ActionListener(){
        
        public void actionPerformed(ActionEvent e){
            String query="insert into student(Name, Address) VALUES (?,?)";
            PreparedStatement pst = null;
            try {
                pst = con.prepareStatement(query);
            } catch (SQLException ex) {
                Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
            }
            String c = cr.tft1.getText();
            String d = cr.tft2.getText();
            try {
                pst.setString(1, c);
            } catch (SQLException ex) {
                Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                pst.setString(2,d);
            } catch (SQLException ex) {
                Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
            }
            int rs = 0;
            try {
                rs = pst.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(rs==1){
                JOptionPane.showMessageDialog(null, "successfully enter your credential");
            }
            else{
                JOptionPane.showMessageDialog(null, "sorry");
            }
            
        }
        
        
        
        } 
        );
        
        
        
        
        // deleting values
        
        cr.jb2.addActionListener(
        
            new ActionListener(){
            
            
            public void actionPerformed(ActionEvent e){
            
               String query="delete from student where ID=?";
               String ID = JOptionPane.showInputDialog("Enter ID");
               PreparedStatement pst = null;
                try {
                    pst = con.prepareStatement(query);
                } catch (SQLException ex) {
                    Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    pst.setString(1,ID);
                } catch (SQLException ex) {
                    Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
                }
               int rs = 0;
                try {
                    rs = pst.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
                }
               if(rs==1){
               
                   JOptionPane.showMessageDialog(null, "deleted successfully");
               }else{
               
                 JOptionPane.showMessageDialog(null, "not deleted try again");
               
               }
            
            
            
            }
            
            
            
            }
        );
        
        
        // updating values
        
        cr.jb3.addActionListener(
        
        new ActionListener(){
        
        
        public void actionPerformed(ActionEvent e){
        
            String query = "update student set Name=?, Address=? where id=?";
            String name = JOptionPane.showInputDialog("Enter Name");
            String address = JOptionPane.showInputDialog("Enter address");
            String id = JOptionPane.showInputDialog("Enter ID");
            PreparedStatement pst = null;
            try {
                pst = con.prepareStatement(query);
            } catch (SQLException ex) {
                Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                pst.setString(1,name);
            } catch (SQLException ex) {
                Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                pst.setString(2, address);
            } catch (SQLException ex) {
                Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                pst.setString(3,id);
            } catch (SQLException ex) {
                Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
            }
            int rs = 0;
            try {
                rs = pst.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(rs==1){
            JOptionPane.showMessageDialog(null, "Data updated successfully");
            
            }else{
                          
             JOptionPane.showMessageDialog(null, "Data is not updated ");

            }
        
        
        }
        
        
        
        }
        );
        
        
        // showing all data
        
        cr.jb4.addActionListener(
        
         new ActionListener(){
         
         
         public void actionPerformed(ActionEvent e){
         
             String query = "select * from student";
             
             PreparedStatement pst=null;
             try {
                 pst = con.prepareStatement(query);
             } catch (SQLException ex) {
                 Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
             }
             ResultSet rs = null;
             try {
                 rs = pst.executeQuery(query);
             } catch (SQLException ex) {
                 Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
             }
             try {
                 while(rs.next()){
                     String a = rs.getString(2);
                     String b = rs.getString(3);
                     
                     JOptionPane.showMessageDialog(null, a);
                     JOptionPane.showMessageDialog(null, b);
                     
                 }
             } catch (SQLException ex) {
                 Logger.getLogger(CrudOperations.class.getName()).log(Level.SEVERE, null, ex);
             }
         
         
         
         
         }
         
         
         
         }
        
        
        
        
        
        );
        
        
        
        
        
        
        
        
    }
    
}
